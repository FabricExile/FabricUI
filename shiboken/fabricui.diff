diff -purN FabricUI.orig/fabricui_graphview_controller_wrapper.cpp FabricUI/fabricui_graphview_controller_wrapper.cpp
--- FabricUI.orig/fabricui_graphview_controller_wrapper.cpp	2016-03-04 13:52:50.410219992 +0100
+++ FabricUI/fabricui_graphview_controller_wrapper.cpp	2016-03-04 13:47:51.866220028 +0100
@@ -681,10 +681,10 @@ Sbk_FabricUI_GraphView_Controller_Init(P
             void* addr = PySide::nextQObjectMemoryAddr();
             PyThreadState* _save = PyEval_SaveThread(); // Py_BEGIN_ALLOW_THREADS
             if (addr) {
-                cptr = new (addr) ::ControllerWrapper(cppArg0);
+                // cptr = new (addr) ::ControllerWrapper(cppArg0);
                 PySide::setNextQObjectMemoryAddr(0);
             } else {
-                cptr = new ::ControllerWrapper(cppArg0);
+                // cptr = new ::ControllerWrapper(cppArg0);
             }
 
             PyEval_RestoreThread(_save); // Py_END_ALLOW_THREADS
diff -purN FabricUI.orig/fabricui_graphview_graph_wrapper.cpp FabricUI/fabricui_graphview_graph_wrapper.cpp
--- FabricUI.orig/fabricui_graphview_graph_wrapper.cpp	2016-03-04 13:52:50.142219993 +0100
+++ FabricUI/fabricui_graphview_graph_wrapper.cpp	2016-03-04 13:47:51.866220028 +0100
@@ -1119,17 +1119,6 @@ Qt::WindowFrameSection GraphWrapper::win
     return cppResult;
 }
 
-const QMetaObject* GraphWrapper::metaObject() const
-{
-    #if QT_VERSION >= 0x040700
-    if (QObject::d_ptr->metaObject) return QObject::d_ptr->metaObject;
-    #endif
-    SbkObject* pySelf = Shiboken::BindingManager::instance().retrieveWrapper(this);
-    if (pySelf == NULL)
-        return FabricUI::GraphView::Graph::metaObject();
-    return PySide::SignalManager::retriveMetaObject(reinterpret_cast<PyObject*>(pySelf));
-}
-
 int GraphWrapper::qt_metacall(QMetaObject::Call call, int id, void** args)
 {
     int result = FabricUI::GraphView::Graph::qt_metacall(call, id, args);
diff -purN FabricUI.orig/fabricui_graphview_node_wrapper.cpp FabricUI/fabricui_graphview_node_wrapper.cpp
--- FabricUI.orig/fabricui_graphview_node_wrapper.cpp	2016-03-04 13:52:50.186219993 +0100
+++ FabricUI/fabricui_graphview_node_wrapper.cpp	2016-03-04 13:47:51.866220028 +0100
@@ -1319,17 +1319,6 @@ Qt::WindowFrameSection NodeWrapper::wind
     return cppResult;
 }
 
-const QMetaObject* NodeWrapper::metaObject() const
-{
-    #if QT_VERSION >= 0x040700
-    if (QObject::d_ptr->metaObject) return QObject::d_ptr->metaObject;
-    #endif
-    SbkObject* pySelf = Shiboken::BindingManager::instance().retrieveWrapper(this);
-    if (pySelf == NULL)
-        return FabricUI::GraphView::Node::metaObject();
-    return PySide::SignalManager::retriveMetaObject(reinterpret_cast<PyObject*>(pySelf));
-}
-
 int NodeWrapper::qt_metacall(QMetaObject::Call call, int id, void** args)
 {
     int result = FabricUI::GraphView::Node::qt_metacall(call, id, args);
diff -ru FabricUI.orig/fabricui_graphview_instblock_wrapper.cpp FabricUI/fabricui_graphview_instblock_wrapper.cpp
--- FabricUI.orig/fabricui_graphview_instblock_wrapper.cpp	2016-06-16 09:32:38.646168688 -0400
+++ FabricUI/fabricui_graphview_instblock_wrapper.cpp	2016-06-16 09:32:57.754740709 -0400
@@ -780,17 +780,6 @@
     return cppResult;
 }
 
-const QMetaObject* InstBlockWrapper::metaObject() const
-{
-    #if QT_VERSION >= 0x040700
-    if (QObject::d_ptr->metaObject) return QObject::d_ptr->metaObject;
-    #endif
-    SbkObject* pySelf = Shiboken::BindingManager::instance().retrieveWrapper(this);
-    if (pySelf == NULL)
-        return FabricUI::GraphView::InstBlock::metaObject();
-    return PySide::SignalManager::retriveMetaObject(reinterpret_cast<PyObject*>(pySelf));
-}
-
 int InstBlockWrapper::qt_metacall(QMetaObject::Call call, int id, void** args)
 {
     int result = FabricUI::GraphView::InstBlock::qt_metacall(call, id, args);

diff -purN FabricUI.orig/fabricui_commands_basescriptablecommand_wrapper.cpp FabricUI/fabricui_commands_basescriptablecommand_wrapper.cpp
--- FabricUI.orig/fabricui_commands_basescriptablecommand_wrapper.cpp   Thu Jun  1 20:16:18 2017
+++ FabricUI/fabricui_commands_basescriptablecommand_wrapper.cpp    Thu Jun  1 20:06:04 2017
@@ -804,15 +804,22 @@
         if (!PyErr_Occurred()) {
             // BaseScriptableCommand()
             void* addr = PySide::nextQObjectMemoryAddr();
-            PyThreadState* _save = PyEval_SaveThread(); // Py_BEGIN_ALLOW_THREADS
-            if (addr) {
-                cptr = new (addr) ::BaseScriptableCommandWrapper();
-                PySide::setNextQObjectMemoryAddr(0);
-            } else {
-                cptr = new ::BaseScriptableCommandWrapper();
-            }
+            PyThreadState* _save = PyEval_SaveThread(); 
+            try
+            {
+                if (addr) {
+                    cptr = new (addr) ::BaseScriptableCommandWrapper();
+                    PySide::setNextQObjectMemoryAddr(0);
+                } else {
+                    cptr = new ::BaseScriptableCommandWrapper();
+                }
 
-            PyEval_RestoreThread(_save); // Py_END_ALLOW_THREADS
+            }
+            catch( std::exception &e )
+            {
+                PyErr_SetString( PyExc_ValueError, e.what() );
+            }
+            PyEval_RestoreThread(_save); // Py_END_ALLOW_THREADS
         }
     }
 
@@ -877,9 +884,16 @@
 
         if (!PyErr_Occurred()) {
             // declareArg(QString,int,QString)
-            PyThreadState* _save = PyEval_SaveThread(); // Py_BEGIN_ALLOW_THREADS
-            Shiboken::Object::hasCppWrapper(reinterpret_cast<SbkObject*>(self)) ? cppSelf->::FabricUI::Commands::BaseScriptableCommand::declareArg(cppArg0, cppArg1, cppArg2) : cppSelf->declareArg(cppArg0, cppArg1, cppArg2);
-            PyEval_RestoreThread(_save); // Py_END_ALLOW_THREADS
+            PyThreadState* _save = PyEval_SaveThread(); 
+            try
+            {
+                Shiboken::Object::hasCppWrapper(reinterpret_cast<SbkObject*>(self)) ? cppSelf->::FabricUI::Commands::BaseScriptableCommand::declareArg(cppArg0, cppArg1, cppArg2) : cppSelf->declareArg(cppArg0, cppArg1, cppArg2);
+            }
+            catch( std::exception &e )
+            {
+                PyErr_SetString( PyExc_ValueError, e.what() );
+            }
+            PyEval_RestoreThread(_save); // Py_END_ALLOW_THREADS
         }
     }
 
@@ -922,9 +936,17 @@
 
         if (!PyErr_Occurred()) {
             // getArg(QString)
-            PyThreadState* _save = PyEval_SaveThread(); // Py_BEGIN_ALLOW_THREADS
-            QString cppResult = Shiboken::Object::hasCppWrapper(reinterpret_cast<SbkObject*>(self)) ? cppSelf->::FabricUI::Commands::BaseScriptableCommand::getArg(cppArg0) : cppSelf->getArg(cppArg0);
-            PyEval_RestoreThread(_save); // Py_END_ALLOW_THREADS
+            PyThreadState* _save = PyEval_SaveThread(); 
+            QString cppResult;
+            try
+            {
+                cppResult = Shiboken::Object::hasCppWrapper(reinterpret_cast<SbkObject*>(self)) ? cppSelf->::FabricUI::Commands::BaseScriptableCommand::getArg(cppArg0) : cppSelf->getArg(cppArg0);
+            }
+            catch( std::exception &e )
+            {
+                PyErr_SetString( PyExc_ValueError, e.what() );
+            }
+            PyEval_RestoreThread(_save); // Py_END_ALLOW_THREADS
             pyResult = Shiboken::Conversions::copyToPython(SbkPySide_QtCoreTypeConverters[SBK_QSTRING_IDX], &cppResult);
         }
     }
@@ -955,9 +977,17 @@
 
         if (!PyErr_Occurred()) {
             // getArgKeys()
-            PyThreadState* _save = PyEval_SaveThread(); // Py_BEGIN_ALLOW_THREADS
-            QList<QString > cppResult = Shiboken::Object::hasCppWrapper(reinterpret_cast<SbkObject*>(self)) ? cppSelf->::FabricUI::Commands::BaseScriptableCommand::getArgKeys() : cppSelf->getArgKeys();
-            PyEval_RestoreThread(_save); // Py_END_ALLOW_THREADS
+            PyThreadState* _save = PyEval_SaveThread(); 
+            QList<QString > cppResult;
+            try
+            {
+                cppResult = Shiboken::Object::hasCppWrapper(reinterpret_cast<SbkObject*>(self)) ? cppSelf->::FabricUI::Commands::BaseScriptableCommand::getArgKeys() : cppSelf->getArgKeys();
+            }
+            catch( std::exception &e )
+            {
+                PyErr_SetString( PyExc_ValueError, e.what() );
+            }
+            PyEval_RestoreThread(_save); // Py_END_ALLOW_THREADS
             pyResult = Shiboken::Conversions::copyToPython(SbkFabricUITypeConverters[SBK_FABRICUI_QLIST_QSTRING_IDX], &cppResult);
         }
     }
@@ -983,9 +1013,17 @@
 
         if (!PyErr_Occurred()) {
             // getArgsDescription()
-            PyThreadState* _save = PyEval_SaveThread(); // Py_BEGIN_ALLOW_THREADS
-            QString cppResult = Shiboken::Object::hasCppWrapper(reinterpret_cast<SbkObject*>(self)) ? cppSelf->::FabricUI::Commands::BaseScriptableCommand::getArgsDescription() : cppSelf->getArgsDescription();
-            PyEval_RestoreThread(_save); // Py_END_ALLOW_THREADS
+            PyThreadState* _save = PyEval_SaveThread(); 
+            QString cppResult;
+            try
+            {                
+                cppResult = Shiboken::Object::hasCppWrapper(reinterpret_cast<SbkObject*>(self)) ? cppSelf->::FabricUI::Commands::BaseScriptableCommand::getArgsDescription() : cppSelf->getArgsDescription();
+            }
+            catch( std::exception &e )
+            {
+                PyErr_SetString( PyExc_ValueError, e.what() );
+            }
+            PyEval_RestoreThread(_save); // Py_END_ALLOW_THREADS
             pyResult = Shiboken::Conversions::copyToPython(SbkPySide_QtCoreTypeConverters[SBK_QSTRING_IDX], &cppResult);
         }
     }
@@ -1025,9 +1063,17 @@
 
         if (!PyErr_Occurred()) {
             // hasArg(QString)
-            PyThreadState* _save = PyEval_SaveThread(); // Py_BEGIN_ALLOW_THREADS
-            bool cppResult = Shiboken::Object::hasCppWrapper(reinterpret_cast<SbkObject*>(self)) ? cppSelf->::FabricUI::Commands::BaseScriptableCommand::hasArg(cppArg0) : cppSelf->hasArg(cppArg0);
-            PyEval_RestoreThread(_save); // Py_END_ALLOW_THREADS
+            PyThreadState* _save = PyEval_SaveThread(); 
+            bool cppResult;
+            try
+            {
+                cppResult = Shiboken::Object::hasCppWrapper(reinterpret_cast<SbkObject*>(self)) ? cppSelf->::FabricUI::Commands::BaseScriptableCommand::hasArg(cppArg0) : cppSelf->hasArg(cppArg0);
+            }
+            catch( std::exception &e )
+            {
+                PyErr_SetString( PyExc_ValueError, e.what() );
+            }
+            PyEval_RestoreThread(_save); // Py_END_ALLOW_THREADS
             pyResult = Shiboken::Conversions::copyToPython(Shiboken::Conversions::PrimitiveTypeConverter<bool>(), &cppResult);
         }
     }
@@ -1085,9 +1131,17 @@
 
         if (!PyErr_Occurred()) {
             // isArg(QString,int)
-            PyThreadState* _save = PyEval_SaveThread(); // Py_BEGIN_ALLOW_THREADS
-            bool cppResult = Shiboken::Object::hasCppWrapper(reinterpret_cast<SbkObject*>(self)) ? cppSelf->::FabricUI::Commands::BaseScriptableCommand::isArg(cppArg0, cppArg1) : cppSelf->isArg(cppArg0, cppArg1);
-            PyEval_RestoreThread(_save); // Py_END_ALLOW_THREADS
+            PyThreadState* _save = PyEval_SaveThread(); 
+            bool cppResult;
+            try
+            {
+                cppResult = Shiboken::Object::hasCppWrapper(reinterpret_cast<SbkObject*>(self)) ? cppSelf->::FabricUI::Commands::BaseScriptableCommand::isArg(cppArg0, cppArg1) : cppSelf->isArg(cppArg0, cppArg1);
+            }
+            catch( std::exception &e )
+            {
+                PyErr_SetString( PyExc_ValueError, e.what() );
+            }
+            PyEval_RestoreThread(_save); // Py_END_ALLOW_THREADS
             pyResult = Shiboken::Conversions::copyToPython(Shiboken::Conversions::PrimitiveTypeConverter<bool>(), &cppResult);
         }
     }
@@ -1132,9 +1186,17 @@
 
         if (!PyErr_Occurred()) {
             // isArgSet(QString)
-            PyThreadState* _save = PyEval_SaveThread(); // Py_BEGIN_ALLOW_THREADS
-            bool cppResult = Shiboken::Object::hasCppWrapper(reinterpret_cast<SbkObject*>(self)) ? cppSelf->::FabricUI::Commands::BaseScriptableCommand::isArgSet(cppArg0) : cppSelf->isArgSet(cppArg0);
-            PyEval_RestoreThread(_save); // Py_END_ALLOW_THREADS
+            PyThreadState* _save = PyEval_SaveThread(); 
+            bool cppResult;
+            try
+            {
+                cppResult = Shiboken::Object::hasCppWrapper(reinterpret_cast<SbkObject*>(self)) ? cppSelf->::FabricUI::Commands::BaseScriptableCommand::isArgSet(cppArg0) : cppSelf->isArgSet(cppArg0);
+            }
+            catch( std::exception &e )
+            {
+              PyErr_SetString( PyExc_ValueError, e.what() );
+            }
+            PyEval_RestoreThread(_save); // Py_END_ALLOW_THREADS
             pyResult = Shiboken::Conversions::copyToPython(Shiboken::Conversions::PrimitiveTypeConverter<bool>(), &cppResult);
         }
     }
@@ -1191,9 +1253,16 @@
 
         if (!PyErr_Occurred()) {
             // setArg(QString,QString)
-            PyThreadState* _save = PyEval_SaveThread(); // Py_BEGIN_ALLOW_THREADS
-            Shiboken::Object::hasCppWrapper(reinterpret_cast<SbkObject*>(self)) ? cppSelf->::FabricUI::Commands::BaseScriptableCommand::setArg(cppArg0, cppArg1) : cppSelf->setArg(cppArg0, cppArg1);
-            PyEval_RestoreThread(_save); // Py_END_ALLOW_THREADS
+            PyThreadState* _save = PyEval_SaveThread(); 
+            try
+            {
+                Shiboken::Object::hasCppWrapper(reinterpret_cast<SbkObject*>(self)) ? cppSelf->::FabricUI::Commands::BaseScriptableCommand::setArg(cppArg0, cppArg1) : cppSelf->setArg(cppArg0, cppArg1);
+            }
+            catch( std::exception &e )
+            {
+              PyErr_SetString( PyExc_ValueError, e.what() );
+            }
+            PyEval_RestoreThread(_save); // Py_END_ALLOW_THREADS
         }
     }
 
@@ -1221,9 +1290,16 @@
 
         if (!PyErr_Occurred()) {
             // validateSetArgs()
-            PyThreadState* _save = PyEval_SaveThread(); // Py_BEGIN_ALLOW_THREADS
-            Shiboken::Object::hasCppWrapper(reinterpret_cast<SbkObject*>(self)) ? cppSelf->::FabricUI::Commands::BaseScriptableCommand::validateSetArgs() : cppSelf->validateSetArgs();
-            PyEval_RestoreThread(_save); // Py_END_ALLOW_THREADS
+            PyThreadState* _save = PyEval_SaveThread(); 
+            try
+            {
+                Shiboken::Object::hasCppWrapper(reinterpret_cast<SbkObject*>(self)) ? cppSelf->::FabricUI::Commands::BaseScriptableCommand::validateSetArgs() : cppSelf->validateSetArgs();
+            }
+            catch( std::exception &e )
+            {
+                PyErr_SetString( PyExc_ValueError, e.what() );
+            }
+            PyEval_RestoreThread(_save); // Py_END_ALLOW_THREADS
         }
     }
 
