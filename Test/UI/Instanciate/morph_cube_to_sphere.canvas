{
  "objectType" : "Graph",
  "metadata" : {
    "camera_mat44" : "{\n  \"row0\" : {\n    \"x\" : -0.5386825203895569,\n    \"y\" : 0.3051549196243286,\n    \"z\" : -0.7857470512390137,\n    \"t\" : -3.999508380889893\n    },\n  \"row1\" : {\n    \"x\" : -3.741603450180264e-06,\n    \"y\" : 0.9319921731948853,\n    \"z\" : 0.3623348772525787,\n    \"t\" : 1.843945980072022\n    },\n  \"row2\" : {\n    \"x\" : 0.8429570198059082,\n    \"y\" : 0.1950100213289261,\n    \"z\" : -0.5021213889122009,\n    \"t\" : -2.554900884628296\n    },\n  \"row3\" : {\n    \"x\" : 0,\n    \"y\" : 0,\n    \"z\" : 0,\n    \"t\" : 1\n    }\n  }",
    "timeline_start" : "0",
    "timeline_loopMode" : "1",
    "uiGraphZoom" : "{\n  \"value\" : 0.3734661638736725\n  }",
    "timeline_simMode" : "0",
    "camera_focalDistance" : "5.091987609863281",
    "timeline_current" : "72",
    "timeline_end" : "180",
    "uiGraphPan" : "{\n  \"x\" : 367.0230500354501,\n  \"y\" : 29.34697742391796\n  }"
    },
  "title" : "",
  "ports" : [
    {
      "objectType" : "Port",
      "nodePortType" : "In",
      "name" : "this",
      "execPortType" : "Out",
      "typeSpec" : "DrawingHandle"
      },
    {
      "objectType" : "Port",
      "nodePortType" : "Out",
      "name" : "timeline",
      "execPortType" : "In",
      "typeSpec" : "Scalar"
      }
    ],
  "extDeps" : {},
  "nodes" : [
    {
      "objectType" : "User",
      "metadata" : {
        "uiComment" : "generate an array of transforms using\nthe volume of a polygon mesh cube",
        "uiGraphPos" : "{\"x\":277.885009765625,\"y\":5.764967918395996}",
        "uiNodeColor" : "{\n  \"r\" : 121,\n  \"g\" : 134,\n  \"b\" : 143\n  }",
        "uiTextColor" : "{\n  \"r\" : 20,\n  \"g\" : 20,\n  \"b\" : 20\n  }",
        "uiCommentExpanded" : "true",
        "uiGraphSize" : "{\"w\":364.8287353515625,\"h\":312.0470886230469}"
        },
      "name" : "backdrop",
      "ports" : []
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":454.1198425292969,\"y\":70.34916687011719}"
        },
      "name" : "Voxelize_1",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "mesh"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "Float32" : 7
            },
          "name" : "detail"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "createXfos"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "Boolean" : false
            },
          "name" : "createLines"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "projection"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "acceleration"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "threading"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "xfo"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "lines"
          }
        ],
      "executable" : "Fabric.Compounds.Instanciate.Voxelize",
      "presetGUID" : "9975D9A692CE4AFB721792BA5A87489B"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":1882.08984375,\"y\":222.7142944335938}"
        },
      "name" : "EmptyDrawingHandle_1",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "handle"
          }
        ],
      "executable" : "Fabric.Exts.InlineDrawing.DrawingHandle.EmptyDrawingHandle",
      "presetGUID" : "2440020BA6A1CAB1CEB690A198F99C70"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":2100.484130859375,\"y\":245.3703308105469}"
        },
      "name" : "DrawPolygonMeshInstances_1",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "IO",
          "name" : "this"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "name"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "Color" : {
              "r" : 0.6901960968971252,
              "g" : 0.6901960968971252,
              "b" : 0.6901960968971252,
              "a" : 1
              }
            },
          "name" : "color"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "specular"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "specFactor"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "transforms"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "mesh"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "Boolean" : false
            },
          "name" : "wireFrame"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "Boolean" : false
            },
          "name" : "doubleSided"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "dummyResult"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "instance"
          }
        ],
      "executable" : "Fabric.Exts.InlineDrawing.DrawingHandle.DrawPolygonMeshInstances",
      "presetGUID" : "0C9FCE9D40A851AD390C29C4A14B316D"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":298.9747619628906,\"y\":48.55445098876953}"
        },
      "name" : "GetCube_2",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "Float32" : 2.099999904632568
            },
          "name" : "size"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "mesh"
          }
        ],
      "executable" : "Fabric.Compounds.PolygonMesh.Create.GetCube",
      "presetGUID" : "0E6A12754DCE2F4F12529B6D80236D75"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":1695.974853515625,\"y\":430.2178955078125}"
        },
      "name" : "GetTorus_1",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "Float32" : 0.1749999970197678
            },
          "name" : "innerRadius"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "Float32" : 1
            },
          "name" : "outerRadius"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "UInt32" : 10
            },
          "name" : "detail"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "mesh"
          }
        ],
      "executable" : "Fabric.Compounds.PolygonMesh.Create.GetTorus",
      "presetGUID" : "7F80E0AB27C6B066DCC96779963E625B"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":892.3731079101563,\"y\":134.0706634521484}",
        "uiCollapsedState" : "0"
        },
      "name" : "GetSphere_1",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "Float32" : 1.25
            },
          "name" : "radius"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "UInt32" : 26
            },
          "name" : "detail"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "mesh"
          }
        ],
      "executable" : "Fabric.Compounds.PolygonMesh.Create.GetSphere",
      "presetGUID" : "C056EAB708BB7EEAEA710BFFB8D4E9DE"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":1879.328857421875,\"y\":506.9905090332031}"
        },
      "name" : "Transform_1",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "mesh"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "xfo"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "result"
          }
        ],
      "executable" : "Fabric.Compounds.PolygonMesh.Modify.Transform",
      "presetGUID" : "4293D289E438FE24AF2B0BA7FF7CDCEA"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":622.7119750976563,\"y\":459.6141357421875}",
        "uiCollapsedState" : "2"
        },
      "name" : "Scalar_1",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "Float32" : 1
            },
          "name" : "value"
          }
        ],
      "executable" : "Fabric.Core.Constants.Scalar",
      "presetGUID" : "E0E96C6E234F70063BC98887B83327DC"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiComment" : "try this: use a non-zero value for trX, e.g. 10,\nto get some cool looking effect",
        "uiGraphPos" : "{\"x\":1609.934326171875,\"y\":612.0938720703125}",
        "uiCollapsedState" : "1",
        "uiCommentExpanded" : "true"
        },
      "name" : "XfoFromScalars_1",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "IO",
          "name" : "this"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "scX"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "scY"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "Float32" : 1
            },
          "name" : "scZ"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "Float32" : 90
            },
          "name" : "degreeX"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "degreeY"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "Float32" : 0
            },
          "name" : "degreeZ"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "Float32" : 0
            },
          "name" : "trX"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "trY"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "trZ"
          }
        ],
      "executable" : "Fabric.Exts.Math.Xfo.XfoFromScalars",
      "presetGUID" : "C9E3024CB08CA5CF0F3E6CD6B755F608"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":1578.497680664063,\"y\":454.1091613769531}",
        "uiCollapsedState" : "2"
        },
      "name" : "Sub_1",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "Float32" : 1.174999952316284
            },
          "name" : "lhs"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "rhs"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "result"
          }
        ],
      "executable" : "Fabric.Core.Math.Sub",
      "presetGUID" : "F9754B19F43BC017056B8BA291E7B8B4"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":241.712158203125,\"y\":459.6141357421875}",
        "uiCollapsedState" : "2"
        },
      "name" : "Rescale_1",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "value"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "inMin"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "Float32" : 45
            },
          "name" : "inMax"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "outMin"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "Float32" : 3.140000104904175
            },
          "name" : "outMax"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "result"
          }
        ],
      "executable" : "Fabric.Core.Math.Rescale",
      "presetGUID" : "4769F739D0AB963E327F9F6DB41FB521"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":372.7120361328125,\"y\":459.6141357421875}",
        "uiCollapsedState" : "2"
        },
      "name" : "Sin_1",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "value"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "result"
          }
        ],
      "executable" : "Fabric.Core.Trigonometry.Sin",
      "presetGUID" : "770343876572443C9B4721A66A428C2D"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":491.7119750976563,\"y\":459.6141357421875}",
        "uiCollapsedState" : "2"
        },
      "name" : "Rescale_2",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "value"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "Float32" : -1
            },
          "name" : "inMin"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "Float32" : 1
            },
          "name" : "inMax"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "outMin"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "Float32" : 1
            },
          "name" : "outMax"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "result"
          }
        ],
      "executable" : "Fabric.Core.Math.Rescale",
      "presetGUID" : "4769F739D0AB963E327F9F6DB41FB521"
      },
    {
      "objectType" : "User",
      "metadata" : {
        "uiComment" : "use the current time to drive some of the parameters of the graph",
        "uiGraphPos" : "{\"x\":219.7987670898438,\"y\":414.7682189941406}",
        "uiNodeColor" : "{\n  \"r\" : 121,\n  \"g\" : 134,\n  \"b\" : 143\n  }",
        "uiTextColor" : "{\n  \"r\" : 20,\n  \"g\" : 20,\n  \"b\" : 20\n  }",
        "uiCommentExpanded" : "true",
        "uiGraphSize" : "{\"w\":544.71240234375,\"h\":110.102294921875}"
        },
      "name" : "backdrop_2",
      "ports" : []
      },
    {
      "objectType" : "User",
      "metadata" : {
        "uiComment" : "push and align the array of transforms onto a polygon mesh sphere",
        "uiGraphPos" : "{\"x\":853.6378784179688,\"y\":81.30340576171875}",
        "uiNodeColor" : "{\n  \"r\" : 121,\n  \"g\" : 134,\n  \"b\" : 143\n  }",
        "uiTextColor" : "{\n  \"r\" : 20,\n  \"g\" : 20,\n  \"b\" : 20\n  }",
        "uiCommentExpanded" : "true",
        "uiGraphSize" : "{\"w\":442.8911437988281,\"h\":344.2906188964844}"
        },
      "name" : "backdrop_3",
      "ports" : []
      },
    {
      "objectType" : "User",
      "metadata" : {
        "uiComment" : "use the final array of transformation to draw a bunch of toruses into the viewport\n\njust for the fun of it we also use the current time to animate the radiuses of the toruses",
        "uiGraphPos" : "{\"x\":1511.90966796875,\"y\":155.367919921875}",
        "uiNodeColor" : "{\n  \"r\" : 121,\n  \"g\" : 134,\n  \"b\" : 143\n  }",
        "uiTextColor" : "{\n  \"r\" : 20,\n  \"g\" : 20,\n  \"b\" : 20\n  }",
        "uiCommentExpanded" : "true",
        "uiGraphSize" : "{\"w\":863.1359252929688,\"h\":520.156982421875}"
        },
      "name" : "backdrop_4",
      "ports" : []
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":1056.541381835938,\"y\":203.6061706542969}"
        },
      "name" : "ConstrainToSurfaceXfo_1",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "mesh"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "xfos"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "constrain"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "align"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "upVector"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "vector"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "position"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "result"
          }
        ],
      "executable" : "Fabric.Compounds.Deform.ConstrainToSurfaceXfo",
      "presetGUID" : "12EEC0419B29E32B7FCF69C383F159FE"
      }
    ],
  "connections" : {
    "timeline" : [
      "Rescale_1.value"
      ],
    "Voxelize_1.xfo" : [
      "ConstrainToSurfaceXfo_1.xfos"
      ],
    "EmptyDrawingHandle_1.handle" : [
      "DrawPolygonMeshInstances_1.this"
      ],
    "DrawPolygonMeshInstances_1.this" : [
      "this"
      ],
    "GetCube_2.mesh" : [
      "Voxelize_1.mesh"
      ],
    "GetTorus_1.mesh" : [
      "Transform_1.mesh"
      ],
    "GetSphere_1.mesh" : [
      "ConstrainToSurfaceXfo_1.mesh"
      ],
    "Transform_1.result" : [
      "DrawPolygonMeshInstances_1.mesh"
      ],
    "Scalar_1.value" : [
      "GetTorus_1.outerRadius",
      "Sub_1.rhs",
      "ConstrainToSurfaceXfo_1.constrain",
      "ConstrainToSurfaceXfo_1.align"
      ],
    "XfoFromScalars_1.this" : [
      "Transform_1.xfo"
      ],
    "Sub_1.result" : [
      "GetTorus_1.innerRadius"
      ],
    "Rescale_1.result" : [
      "Sin_1.value"
      ],
    "Sin_1.result" : [
      "Rescale_2.value"
      ],
    "Rescale_2.result" : [
      "Scalar_1.value"
      ],
    "ConstrainToSurfaceXfo_1.result" : [
      "DrawPolygonMeshInstances_1.transforms"
      ]
    },
  "requiredPresets" : {
    "Fabric.Compounds.Instanciate.Voxelize" : {
      "objectType" : "Graph",
      "metadata" : {
        "uiGraphZoom" : "{\n  \"value\" : 1.0\n  }",
        "uiTooltip" : "Creates an array of grid-aligned Xfos that\nare contained in the volume of the input polygon mesh.",
        "uiGraphPan" : "{\n  \"x\" : 68.41733551025391,\n  \"y\" : 10.52401733398438\n  }"
        },
      "title" : "Voxelize",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "mesh",
          "execPortType" : "In",
          "typeSpec" : "PolygonMesh"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiRange" : "(0.5, 5)"
            },
          "nodePortType" : "Out",
          "defaultValues" : {
            "Float32" : 1
            },
          "name" : "detail",
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "defaultValues" : {
            "Boolean" : true
            },
          "name" : "createXfos",
          "execPortType" : "In",
          "typeSpec" : "Boolean"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "defaultValues" : {
            "Boolean" : true
            },
          "name" : "createLines",
          "execPortType" : "In",
          "typeSpec" : "Boolean"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiCombo" : "(\"Automatic\", \"XY Plane\", \"XZ Plane\", \"ZY Plane\")"
            },
          "nodePortType" : "Out",
          "defaultValues" : {
            "SInt32" : 0
            },
          "name" : "projection",
          "execPortType" : "In",
          "typeSpec" : "Integer"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiCombo" : "(\"Octree\", \"Sparse Grid\")"
            },
          "nodePortType" : "Out",
          "defaultValues" : {
            "SInt32" : 0
            },
          "name" : "acceleration",
          "execPortType" : "In",
          "typeSpec" : "Integer"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiCombo" : "(\"Automatic\", \"Singlethreaded\", \"Multithreaded\")"
            },
          "nodePortType" : "Out",
          "defaultValues" : {
            "SInt32" : 0
            },
          "name" : "threading",
          "execPortType" : "In",
          "typeSpec" : "Integer"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "In",
          "name" : "xfo",
          "execPortType" : "Out",
          "typeSpec" : "Xfo[]"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "In",
          "name" : "lines",
          "execPortType" : "Out",
          "typeSpec" : "Lines"
          }
        ],
      "extDeps" : {},
      "presetGUID" : "9975D9A692CE4AFB721792BA5A87489B",
      "nodes" : [
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\":702.3571166992188,\"y\":189.6236419677734}"
            },
          "name" : "Cache",
          "ports" : [
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "value"
              }
            ],
          "executable" : "Fabric.Core.Data.Cache",
          "presetGUID" : "D903AFD981FE9214C69943F542D5FD60"
          },
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\":707.7929077148438,\"y\":249.3271026611328}"
            },
          "name" : "Cache2",
          "ports" : [
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "value"
              }
            ],
          "executable" : "Fabric.Core.Data.Cache",
          "presetGUID" : "D903AFD981FE9214C69943F542D5FD60"
          },
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\":481.8499450683594,\"y\":56.04925537109375}"
            },
          "name" : "applyVoxelize",
          "ports" : [
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "mesh"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "detail"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "createXfos"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "createLines"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "projection"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "defaultValues" : {
                "Boolean" : true
                },
              "name" : "acceleration"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "defaultValues" : {
                "Boolean" : true
                },
              "name" : "threading"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "Out",
              "name" : "xfo"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "Out",
              "name" : "lines"
              }
            ],
          "definition" : {
            "objectType" : "Func",
            "title" : "applyVoxelize",
            "ports" : [
              {
                "objectType" : "Port",
                "nodePortType" : "Out",
                "name" : "mesh",
                "execPortType" : "In",
                "typeSpec" : "PolygonMesh"
                },
              {
                "objectType" : "Port",
                "nodePortType" : "Out",
                "name" : "detail",
                "execPortType" : "In",
                "typeSpec" : "Scalar"
                },
              {
                "objectType" : "Port",
                "nodePortType" : "Out",
                "name" : "createXfos",
                "execPortType" : "In",
                "typeSpec" : "Boolean"
                },
              {
                "objectType" : "Port",
                "nodePortType" : "Out",
                "name" : "createLines",
                "execPortType" : "In",
                "typeSpec" : "Boolean"
                },
              {
                "objectType" : "Port",
                "nodePortType" : "Out",
                "name" : "projection",
                "execPortType" : "In",
                "typeSpec" : "Integer"
                },
              {
                "objectType" : "Port",
                "nodePortType" : "Out",
                "name" : "acceleration",
                "execPortType" : "In",
                "typeSpec" : "Integer"
                },
              {
                "objectType" : "Port",
                "nodePortType" : "Out",
                "name" : "threading",
                "execPortType" : "In",
                "typeSpec" : "Integer"
                },
              {
                "objectType" : "Port",
                "nodePortType" : "In",
                "name" : "xfo",
                "execPortType" : "Out",
                "typeSpec" : "Xfo[]"
                },
              {
                "objectType" : "Port",
                "nodePortType" : "In",
                "name" : "lines",
                "execPortType" : "Out",
                "typeSpec" : "Lines"
                }
              ],
            "extDeps" : {},
            "code" : "operator Voxelize_task<<<index>>>(io Vec4_i[][]         hLine,
                                  PolygonMesh           polymesh,
                                  Float32               cellSizeInv,
                                  UInt32                numRayi,
                                  Vec3                  vDir,
                                  Vec3                  vPosStart,
                                  Vec3                  vPosStartAddi,
                                  Vec3                  vPosStartAddj
                                 )
{
  const Float32 epsilon = 0.001;

  // begin spatial query.
  Ref<SpatialQuery> query = polymesh.beginSpatialQuery();

  // split index into row/column.
  UInt32 rayj = index / numRayi;
  UInt32 rayi = index - rayj * numRayi;
    
  // calculate ray's starting position.
  Vec3 rayPos = vPosStart + rayi * vPosStartAddi + rayj * vPosStartAddj;

  // declare and init security counter (to avoid a possible infinite loop due to rounding errors).
  UInt32 security = 1;

  // ray cast.
  while (true)
  {
    // get the intersection.
    Ray ray(rayPos, vDir);
    GeometryLocation gloc = query.raycast(ray, true, 0, SCALAR_INFINITE);

    // no hit?
    if (!gloc.isValid())
      break;

    // get the position at gloc.
    Vec3 glocPos = polymesh.getPositionAtLocation(gloc);

    // set newLine's position from gloc and its length to 0.
    Vec4_i newLine;
    newLine.x = floor(glocPos.x * cellSizeInv);
    newLine.y = floor(glocPos.y * cellSizeInv);
    newLine.z = floor(glocPos.z * cellSizeInv);
    newLine.t = 0;

    // calculate ray's starting position for the second ray cast.
    rayPos = glocPos + epsilon * vDir;
    ray.set(rayPos, vDir);
    gloc = query.raycast(ray, true, 0, SCALAR_INFINITE);

    // no hit?
    if (!gloc.isValid())
    {
      // add newLine to hLine and break.
      hLine[index].push(newLine);
      break;
    }

    // get the position at gloc.
    glocPos = polymesh.getPositionAtLocation(gloc);
          
    // set newLine's final length (in cells).
    newLine.t =   (floor(glocPos.x * cellSizeInv) - newLine.x)
                + (floor(glocPos.y * cellSizeInv) - newLine.y)
                + (floor(glocPos.z * cellSizeInv) - newLine.z);

    // perform security check, calculate next ray's starting position and add newLine to hLine.
    if (newLine.t > 1)
    {
      security = 1;
      rayPos = glocPos + epsilon * vDir;
      hLine[index].push(newLine);
    }
    else
    {
      // is newLine identical with the last line in hLine?
      if (hLine[index].size() > 0 && newLine == hLine[index][hLine[index].size() - 1])
      {
        // increase the security and ignore newLine (i.e. don't add it to hLine).
        security++;
        rayPos = glocPos + epsilon * Float32(security) * vDir;
      }
      else
      {
        security = 1;
        rayPos = glocPos + epsilon * vDir;
        hLine[index].push(newLine);
      }
    }
  }

  // end spatial query.
  polymesh.endSpatialQuery(query);
}

dfgEntry
{
  // init.
  xfo.resize(0);
  lines = Lines();

  // check.
  if (   detail < DIVIDEPRECISION
      || mesh == null
      || mesh.polygonCount() <= 0
      || mesh.triangleCount() <= 0)
    return;

  // nothing to do?
  if (!createXfos && !createLines)
    return;

  // convert detail into cell size.
  Float32 cellSize    = 1.0 / detail;
  Float32 cellSizeInv = 1.0 / cellSize;

  // get the bounding box of the mesh and snap its corners to the grid defined by cellSize.
  Vec3 bbMin;
  Vec3 bbMax;
  Vec3 bbSize;
  {
    // get the bounding box corners.
    LocalBoundingVolume bvol = mesh.getBoundingVolume();
    bbMin = bvol.bBoxGetMin();
    bbMax = bvol.bBoxGetMax();

    // snap bbmin to grid.
    bbMin  *= cellSizeInv;
    bbMin.x = floor(bbMin.x);
    bbMin.y = floor(bbMin.y);
    bbMin.z = floor(bbMin.z);
    bbMin  *= cellSize;

    // snap bbmax to grid.
    bbMax  *= cellSizeInv;
    bbMax.x = ceil(bbMax.x);
    bbMax.y = ceil(bbMax.y);
    bbMax.z = ceil(bbMax.z);
    bbMax  *= cellSize;
  
    // calculate size.
    bbSize = bbMax - bbMin;

    // bounding box no good?
    if (   bbSize.x <= 0
        || bbSize.y <= 0
        || bbSize.z <= 0)
      return;
  }
  
  // determine the plane for the ray casting.
  const Integer PLANE_XY = 1;
  const Integer PLANE_XZ = 2;
  const Integer PLANE_ZY = 3;
  Integer raycastPlane;
  switch (projection)
  {
    case PLANE_XY:
    case PLANE_XZ:
    case PLANE_ZY:
    {
      raycastPlane = projection;
      break;
    }
    default:
    {
      Float32 bbAreaXY = bbSize.x * bbSize.y;
      Float32 bbAreaXZ = bbSize.x * bbSize.z;
      Float32 bbAreaZY = bbSize.z * bbSize.y;
      if      (bbAreaXY <= bbAreaXZ && bbAreaXY <= bbAreaZY)  raycastPlane = PLANE_XY;
      else if (bbAreaXZ <= bbAreaXY && bbAreaXZ <= bbAreaZY)  raycastPlane = PLANE_XZ;
      else                                                    raycastPlane = PLANE_ZY;
      break;
    }            
  }
    
  // do it.
  Vec4_i hLine[][];  // h-lines (x, y, z is line's starting position, t is line's length, all units in cells).
  Vec3   vDir = 0;   // the vector used for raycasting, its length is equal cellSize.
  {
    // calculate the amount of rays in i and j and init the vectors that will be used when casting the rays.
    UInt32 numRayi;
    UInt32 numRayj;
    Vec3 vPosStart     = bbMin;
    Vec3 vPosStartAddi = 0;
    Vec3 vPosStartAddj = 0;
    switch (raycastPlane)
    {
      case PLANE_XY:
        numRayi = round(bbSize.x * cellSizeInv);
        numRayj = round(bbSize.y * cellSizeInv);
        vDir         .z = cellSize;
        vPosStartAddi.x = cellSize;
        vPosStartAddj.y = cellSize;
        vPosStart    .z = vPosStart.z - cellSize;
        break;
      case PLANE_XZ:
        numRayi = round(bbSize.x * cellSizeInv);
        numRayj = round(bbSize.z * cellSizeInv);
        vDir         .y = cellSize;
        vPosStartAddi.x = cellSize;
        vPosStart    .y = vPosStart.y - cellSize;
        vPosStartAddj.z = cellSize;
        break;
      default:
        numRayi = round(bbSize.z * cellSizeInv);
        numRayj = round(bbSize.y * cellSizeInv);
        vDir         .x = cellSize;
        vPosStart    .x = vPosStart.x - cellSize;
        vPosStartAddj.y = cellSize;
        vPosStartAddi.z = cellSize;
        break;
    }
    vPosStart += 0.5 * (vPosStartAddi + vPosStartAddj);

    // init/set hLine[][].
    hLine.resize(numRayi * numRayj);

    // prepare mesh for spatial queries.
    GenericValueContainer options = GenericValueContainer();
    if (acceleration == 0)  PrepareForSpatialQueries_setOctree    (options);
    else                    PrepareForSpatialQueries_setSparseGrid(options);
    mesh.prepareForSpatialQueries(numRayi * numRayj, options);
    
    // fill hLine.
    if (threading == 1 || (threading == 0 && hLine.size() < 32))
    {
      // singlethreaded.
      for (UInt32 i=0;i<hLine.size();i++)
        Voxelize_task(i, hLine, mesh, cellSizeInv, numRayi, vDir, vPosStart, vPosStartAddi, vPosStartAddj);
    }
    else
    {
      // multithreaded.
      Voxelize_task<<<hLine.size()>>>(hLine, mesh, cellSizeInv, numRayi, vDir, vPosStart, vPosStartAddi, vPosStartAddj);
    }
  }
  
  // set output (Xfo[]).
  if (createXfos)
  {
    // count the total amount of xfo.
    UInt32 count = 0;
    for (UInt32 i=0;i<hLine.size();i++)
      for (UInt32 j=0;j<hLine[i].size();j++)
        count += hLine[i][j].t + 1;

    // resize and fill output.
    xfo.resize(count);
    count = 0;
    for (UInt32 i=0;i<hLine.size();i++)
    {
      for (UInt32 j=0;j<hLine[i].size();j++)
      {
        Vec3 p;
        p.x = cellSize * (0.5 + Float32(hLine[i][j].x));
        p.y = cellSize * (0.5 + Float32(hLine[i][j].y));
        p.z = cellSize * (0.5 + Float32(hLine[i][j].z));
        switch (raycastPlane)
        {
          case PLANE_XY:
          {
            for (UInt32 k=0;k<=hLine[i][j].t;k++,count++)
            {
              xfo[count].ori = Quat();
              xfo[count].sc  = cellSize;
              xfo[count].tr  = p;
              p.z += cellSize;
            }
          } break;
          case PLANE_XZ:
          {
            for (UInt32 k=0;k<=hLine[i][j].t;k++,count++)
            {
              xfo[count].ori = Quat();
              xfo[count].sc  = cellSize;
              xfo[count].tr  = p;
              p.y += cellSize;
            }
          } break;
          default:
          {
            for (UInt32 k=0;k<=hLine[i][j].t;k++,count++)
            {
              xfo[count].ori = Quat();
              xfo[count].sc  = cellSize;
              xfo[count].tr  = p;
              p.x += cellSize;
            }
          } break;
        }
      }
    }
 }

  // set output (Lines).
  if (createLines)
  {
    // count the total amount of lines.
    UInt32 count = 0;
    for (UInt32 i=0;i<hLine.size();i++)
      count += hLine[i].size();
  
    // fill output.
    lines.addPoints(2 * count);
    count = 0;
    for (UInt32 i=0;i<hLine.size();i++)
    {
      for (UInt32 j=0;j<hLine[i].size();j++,count+=2)
      {
        Vec3 p;
        p.x = cellSize * (0.5 + Float32(hLine[i][j].x));
        p.y = cellSize * (0.5 + Float32(hLine[i][j].y));
        p.z = cellSize * (0.5 + Float32(hLine[i][j].z));
        lines.setPosition(count + 0, p);
        lines.setPosition(count + 1, p + Float32(hLine[i][j].t) * vDir);
        lines.addLine(count, count + 1);
      }
    }
    lines.incrementPositionsVersion();
  }
}

require Geometry;

"
            }
          }
        ],
      "connections" : {
        "mesh" : [
          "applyVoxelize.mesh"
          ],
        "detail" : [
          "applyVoxelize.detail"
          ],
        "createXfos" : [
          "applyVoxelize.createXfos"
          ],
        "createLines" : [
          "applyVoxelize.createLines"
          ],
        "projection" : [
          "applyVoxelize.projection"
          ],
        "acceleration" : [
          "applyVoxelize.acceleration"
          ],
        "threading" : [
          "applyVoxelize.threading"
          ],
        "Cache.value" : [
          "xfo"
          ],
        "Cache2.value" : [
          "lines"
          ],
        "applyVoxelize.xfo" : [
          "Cache.value"
          ],
        "applyVoxelize.lines" : [
          "Cache2.value"
          ]
        }
      },
    "Fabric.Core.Data.Cache" : {
      "objectType" : "Func",
      "metadata" : {
        "uiNodeColor" : "{\n  \"r\" : 214,\n  \"g\" : 191,\n  \"b\" : 103\n  }",
        "uiAlwaysShowDaisyChainPorts" : "true",
        "uiHeaderColor" : "{\n  \"r\" : 188,\n  \"g\" : 129,\n  \"b\" : 83\n  }"
        },
      "title" : "Cache",
      "cacheRule" : "always",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "value",
          "execPortType" : "In",
          "typeSpec" : "$TYPE$"
          }
        ],
      "extDeps" : {},
      "presetGUID" : "D903AFD981FE9214C69943F542D5FD60",
      "code" : "dfgEntry {
}
"
      },
    "Fabric.Exts.InlineDrawing.DrawingHandle.EmptyDrawingHandle" : {
      "objectType" : "Graph",
      "title" : "EmptyDrawingHandle",
      "cacheRule" : "never",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "In",
          "name" : "handle",
          "execPortType" : "Out",
          "typeSpec" : "DrawingHandle"
          }
        ],
      "extDeps" : {},
      "presetGUID" : "2440020BA6A1CAB1CEB690A198F99C70",
      "nodes" : [
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\": 894, \"y\": 100}"
            },
          "name" : "Clear",
          "ports" : [
            {
              "objectType" : "InstPort",
              "nodePortType" : "IO",
              "name" : "this"
              }
            ],
          "executable" : "Fabric.Exts.InlineDrawing.DrawingHandle.Clear",
          "presetGUID" : "39E8D81FA7C7C4A825877F16EFE3564F",
          "cacheRule" : "never"
          },
        {
          "objectType" : "Var",
          "metadata" : {
            "uiGraphPos" : "{\"x\":567.0,\"y\":56.0}",
            "uiCollapsedState" : "0"
            },
          "name" : "handleVar",
          "ports" : [
            {
              "objectType" : "VarPort",
              "nodePortType" : "IO",
              "name" : "value"
              }
            ],
          "dataType" : "DrawingHandle",
          "extDep" : "InlineDrawing:*"
          },
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\":287.0,\"y\":56.0}"
            },
          "name" : "CreateDrawingHandle",
          "ports" : [
            {
              "objectType" : "InstPort",
              "nodePortType" : "Out",
              "name" : "handle"
              }
            ],
          "definition" : {
            "objectType" : "Func",
            "title" : "Create DrawingHandle",
            "ports" : [
              {
                "objectType" : "Port",
                "nodePortType" : "In",
                "name" : "handle",
                "execPortType" : "Out",
                "typeSpec" : "DrawingHandle"
                }
              ],
            "extDeps" : {
              "InlineDrawing" : "*"
              },
            "code" : "dfgEntry {
  handle = DrawingHandle();
}
"
            }
          }
        ],
      "connections" : {
        "Clear.this" : [
          "handle"
          ],
        "handleVar.value" : [
          "Clear.this"
          ],
        "CreateDrawingHandle.handle" : [
          "handleVar.value"
          ]
        }
      },
    "Fabric.Exts.InlineDrawing.DrawingHandle.Clear" : {
      "objectType" : "Func",
      "metadata" : {
        "uiDocUrl" : "http://docs.fabric-engine.com/FabricEngine/2.3.0/HTML/KLExtensionsGuide/InlineDrawing/DrawingHandle.html",
        "uiTooltip" : "removes all contents from the DrawingHandle\n\n Supported by DrawingHandle"
        },
      "title" : "Clear",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "IO",
          "name" : "this",
          "execPortType" : "IO",
          "typeSpec" : "DrawingHandle"
          }
        ],
      "extDeps" : {
        "InlineDrawing" : "*"
        },
      "presetGUID" : "39E8D81FA7C7C4A825877F16EFE3564F",
      "code" : "require InlineDrawing;

dfgEntry {
  this.clear();
}
"
      },
    "Fabric.Exts.InlineDrawing.DrawingHandle.DrawPolygonMeshInstances" : {
      "objectType" : "Func",
      "metadata" : {
        "uiDocUrl" : "http://docs.fabric-engine.com/FabricEngine/2.3.0/HTML/KLExtensionsGuide/InlineDrawing/DrawingHandle.html",
        "uiTooltip" : "helper function to draw a mesh given a color + an array of transforms\n\n Supported by DrawingHandle"
        },
      "title" : "DrawPolygonMeshInstances",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "IO",
          "name" : "this",
          "execPortType" : "IO",
          "typeSpec" : "DrawingHandle"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "name",
          "execPortType" : "In",
          "typeSpec" : "String"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 255,\n  \"g\" : 0,\n  \"b\" : 0\n  }"
            },
          "nodePortType" : "Out",
          "defaultValues" : {
            "Color" : {
              "r" : 0,
              "g" : 1,
              "b" : 0,
              "a" : 1
              }
            },
          "name" : "color",
          "execPortType" : "In",
          "typeSpec" : "Color"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 255,\n  \"g\" : 0,\n  \"b\" : 0\n  }"
            },
          "nodePortType" : "Out",
          "defaultValues" : {
            "Color" : {
              "r" : 0.2000000029802322,
              "g" : 0.2000000029802322,
              "b" : 0.2000000029802322,
              "a" : 1
              }
            },
          "name" : "specular",
          "execPortType" : "In",
          "typeSpec" : "Color"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "defaultValues" : {
            "Float32" : 16
            },
          "name" : "specFactor",
          "execPortType" : "In",
          "typeSpec" : "Float32"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 249,\n  \"g\" : 157,\n  \"b\" : 28\n  }"
            },
          "nodePortType" : "Out",
          "name" : "transforms",
          "execPortType" : "In",
          "typeSpec" : "Xfo[]"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 51,\n  \"g\" : 1,\n  \"b\" : 106\n  }"
            },
          "nodePortType" : "Out",
          "name" : "mesh",
          "execPortType" : "In",
          "typeSpec" : "PolygonMesh"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "wireFrame",
          "execPortType" : "In",
          "typeSpec" : "Boolean"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "doubleSided",
          "execPortType" : "In",
          "typeSpec" : "Boolean"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 255,\n  \"g\" : 242,\n  \"b\" : 0\n  }"
            },
          "nodePortType" : "In",
          "name" : "dummyResult",
          "execPortType" : "Out",
          "typeSpec" : "Vec3"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "In",
          "name" : "instance",
          "execPortType" : "Out",
          "typeSpec" : "InlineInstance"
          }
        ],
      "extDeps" : {
        "InlineDrawing" : "*"
        },
      "presetGUID" : "0C9FCE9D40A851AD390C29C4A14B316D",
      "code" : "require InlineDrawing;

dfgEntry {
  this.drawPolygonMeshInstances(name, color, specular, specFactor, transforms, mesh, wireFrame, doubleSided, dummyResult, instance);
}
"
      },
    "Fabric.Compounds.PolygonMesh.Create.GetCube" : {
      "objectType" : "Graph",
      "metadata" : {
        "uiNodeColor" : "{\n  \"r\" : 120,\n  \"g\" : 130,\n  \"b\" : 144\n  }",
        "uiHeaderColor" : "{\n  \"r\" : 88,\n  \"g\" : 92,\n  \"b\" : 110\n  }",
        "uiTooltip" : "Generates a polygon mesh cube."
        },
      "title" : "GetCube",
      "ports" : [
        {
          "objectType" : "Port",
          "metadata" : {
            "uiRange" : "(0, 5)"
            },
          "nodePortType" : "Out",
          "defaultValues" : {
            "Float32" : 2
            },
          "name" : "size",
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "In",
          "name" : "mesh",
          "execPortType" : "Out",
          "typeSpec" : "PolygonMesh"
          }
        ],
      "extDeps" : {},
      "presetGUID" : "0E6A12754DCE2F4F12529B6D80236D75",
      "nodes" : [
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\": 1010.5, \"y\": 384}"
            },
          "name" : "Cache",
          "ports" : [
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "value"
              }
            ],
          "executable" : "Fabric.Core.Data.Cache",
          "presetGUID" : "D903AFD981FE9214C69943F542D5FD60"
          },
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\": 761.5, \"y\": 358}"
            },
          "name" : "RecomputePointNormals",
          "ports" : [
            {
              "objectType" : "InstPort",
              "nodePortType" : "IO",
              "name" : "this"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "defaultValues" : {
                "Float32" : 0
                },
              "name" : "hardAngleRadians"
              }
            ],
          "executable" : "Fabric.Exts.Geometry.PolygonMesh.RecomputePointNormals",
          "presetGUID" : "82B0904C5BAB58BDA9ED038FB18E0629"
          },
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\": 412.5, \"y\": 315}"
            },
          "name" : "EmptyPolygonMesh",
          "ports" : [
            {
              "objectType" : "InstPort",
              "nodePortType" : "Out",
              "name" : "mesh"
              }
            ],
          "executable" : "Fabric.Exts.Geometry.PolygonMesh.EmptyPolygonMesh",
          "presetGUID" : "EE0894325519F66F17D265A042545FEB"
          },
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\": 604, \"y\": 357}"
            },
          "name" : "AddCuboid",
          "ports" : [
            {
              "objectType" : "InstPort",
              "nodePortType" : "IO",
              "name" : "this"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "xfo"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "x"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "y"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "z"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "setNormals"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "setUVs"
              }
            ],
          "executable" : "Fabric.Exts.Geometry.PolygonMesh.AddCuboid",
          "presetGUID" : "158D097D640404E84CB79186BF0DF9DF"
          }
        ],
      "connections" : {
        "size" : [
          "AddCuboid.x",
          "AddCuboid.y",
          "AddCuboid.z"
          ],
        "Cache.value" : [
          "mesh"
          ],
        "RecomputePointNormals.this" : [
          "Cache.value"
          ],
        "EmptyPolygonMesh.mesh" : [
          "AddCuboid.this"
          ],
        "AddCuboid.this" : [
          "RecomputePointNormals.this"
          ]
        }
      },
    "Fabric.Exts.Geometry.PolygonMesh.RecomputePointNormals" : {
      "objectType" : "Func",
      "metadata" : {
        "uiDocUrl" : "http://docs.fabric-engine.com/FabricEngine/2.3.0/HTML/KLExtensionsGuide/Geometry/PolygonMesh.html",
        "uiTooltip" : "Recomputes all point normals and introduces normal splits if adjacent polygons' normals differ by more than `hardAngleRadians` radians.\nAll previously stored point normals will be overwritten.\nThe computed normal value is the average of neighbor polygons' :kl-ref:`PolygonMesh.generatePolygonNormal` (or a subset of these if there is a split).\n\n Supported by PolygonMesh"
        },
      "title" : "RecomputePointNormals",
      "ports" : [
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 51,\n  \"g\" : 1,\n  \"b\" : 106\n  }"
            },
          "nodePortType" : "IO",
          "name" : "this",
          "execPortType" : "IO",
          "typeSpec" : "PolygonMesh"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "hardAngleRadians",
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          }
        ],
      "extDeps" : {
        "Geometry" : "*"
        },
      "presetGUID" : "82B0904C5BAB58BDA9ED038FB18E0629",
      "code" : "require Geometry;

dfgEntry {
  this.recomputePointNormals(hardAngleRadians);
}
"
      },
    "Fabric.Exts.Geometry.PolygonMesh.EmptyPolygonMesh" : {
      "objectType" : "Graph",
      "title" : "EmptyPolygonMesh",
      "cacheRule" : "never",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "In",
          "name" : "mesh",
          "execPortType" : "Out",
          "typeSpec" : "PolygonMesh"
          }
        ],
      "extDeps" : {},
      "presetGUID" : "EE0894325519F66F17D265A042545FEB",
      "nodes" : [
        {
          "objectType" : "Inst",
          "name" : "PolygonMesh",
          "ports" : [
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "debugName"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "float64Positions"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "Out",
              "name" : "result"
              }
            ],
          "executable" : "Fabric.Exts.Geometry.PolygonMesh.PolygonMesh",
          "presetGUID" : "18F3A38BE7497D6BFC18A148A520B66D"
          },
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\": 951, \"y\": 145}"
            },
          "name" : "Clear",
          "ports" : [
            {
              "objectType" : "InstPort",
              "nodePortType" : "IO",
              "name" : "this"
              }
            ],
          "executable" : "Fabric.Exts.Geometry.Func.Clear",
          "presetGUID" : "96D1EC86835296FFDC60533717804EE7",
          "cacheRule" : "never"
          },
        {
          "objectType" : "Var",
          "metadata" : {
            "uiGraphPos" : "{\"x\": 744, \"y\": 122}"
            },
          "name" : "meshVar",
          "ports" : [
            {
              "objectType" : "VarPort",
              "nodePortType" : "IO",
              "name" : "value"
              }
            ],
          "dataType" : "PolygonMesh",
          "extDep" : "Geometry:*"
          }
        ],
      "connections" : {
        "PolygonMesh.result" : [
          "meshVar.value"
          ],
        "Clear.this" : [
          "mesh"
          ],
        "meshVar.value" : [
          "Clear.this"
          ]
        }
      },
    "Fabric.Exts.Geometry.PolygonMesh.PolygonMesh" : {
      "objectType" : "Func",
      "metadata" : {
        "uiDocUrl" : "http://docs.fabric-engine.com/FabricEngine/2.3.0/HTML/KLExtensionsGuide/Geometry/PolygonMesh.html",
        "uiTooltip" : "Constructor.\n\n Supported by PolygonMesh"
        },
      "title" : "PolygonMesh",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "debugName",
          "execPortType" : "In",
          "typeSpec" : "String"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "float64Positions",
          "execPortType" : "In",
          "typeSpec" : "Boolean"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 51,\n  \"g\" : 1,\n  \"b\" : 106\n  }"
            },
          "nodePortType" : "In",
          "name" : "result",
          "execPortType" : "Out",
          "typeSpec" : "PolygonMesh"
          }
        ],
      "extDeps" : {
        "Geometry" : "*"
        },
      "presetGUID" : "18F3A38BE7497D6BFC18A148A520B66D",
      "code" : "require Geometry;

dfgEntry {
  result = PolygonMesh(debugName, float64Positions);
}
"
      },
    "Fabric.Exts.Geometry.Func.Clear" : {
      "objectType" : "Func",
      "metadata" : {
        "uiDocUrl" : "http://docs.fabric-engine.com/FabricEngine/2.3.0/HTML/KLExtensionsGuide/Geometry/GeometryAttributes.html",
        "uiTooltip" : "Removes all attributes, and resets attribute value array sizes to 0.\n\n Supported by GeometryAttributes,BaseGeometry,Points,Lines,PolygonMesh"
        },
      "title" : "Clear",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "IO",
          "name" : "this",
          "execPortType" : "IO",
          "typeSpec" : "$TYPE$"
          }
        ],
      "extDeps" : {
        "Geometry" : "*"
        },
      "presetGUID" : "96D1EC86835296FFDC60533717804EE7",
      "code" : "require Geometry;

dfgEntry {
  this.clear();
}
"
      },
    "Fabric.Exts.Geometry.PolygonMesh.AddCuboid" : {
      "objectType" : "Func",
      "metadata" : {
        "uiDocUrl" : "http://docs.fabric-engine.com/FabricEngine/2.3.0/HTML/KLExtensionsGuide/Geometry/PolygonMesh.html",
        "uiTooltip" : "Appends a transformed cuboid (cube with specified size) to this mesh.\nBefore applying the transformation, the cuboid is centered at the origin,\nand has a range of [-x/2 .. x/2, -y/2 .. y/2, -z/2 .. z/2].\n\n\nSet Points Normals\nFace 0 (+Z)\nFace 1 (-Z)\nFace 2 (+Y)\nFace 3 (-Y)\nFace 4 (+X)\nFace 5 (-X)\nSet Uvs\nFace 0 (+Z)\nFace 1 (-Z)\nFace 2 (+Y)\nFace 3 (-Y)\nFace 4 (+X)\nFace 5 (-X)\n\n Supported by PolygonMesh"
        },
      "title" : "AddCuboid",
      "ports" : [
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 51,\n  \"g\" : 1,\n  \"b\" : 106\n  }"
            },
          "nodePortType" : "IO",
          "name" : "this",
          "execPortType" : "IO",
          "typeSpec" : "PolygonMesh"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 249,\n  \"g\" : 157,\n  \"b\" : 28\n  }"
            },
          "nodePortType" : "Out",
          "name" : "xfo",
          "execPortType" : "In",
          "typeSpec" : "Xfo"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiRange" : "(0.0, 8.0)"
            },
          "nodePortType" : "Out",
          "defaultValues" : {
            "Scalar" : 2
            },
          "name" : "x",
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiRange" : "(0.0, 8.0)"
            },
          "nodePortType" : "Out",
          "defaultValues" : {
            "Scalar" : 2
            },
          "name" : "y",
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiRange" : "(0.0, 8.0)"
            },
          "nodePortType" : "Out",
          "defaultValues" : {
            "Scalar" : 2
            },
          "name" : "z",
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "defaultValues" : {
            "Boolean" : true
            },
          "name" : "setNormals",
          "execPortType" : "In",
          "typeSpec" : "Boolean"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "defaultValues" : {
            "Boolean" : true
            },
          "name" : "setUVs",
          "execPortType" : "In",
          "typeSpec" : "Boolean"
          }
        ],
      "extDeps" : {
        "Geometry" : "*"
        },
      "presetGUID" : "158D097D640404E84CB79186BF0DF9DF",
      "code" : "require Geometry;

dfgEntry {
  this.addCuboid(xfo, x, y, z, setNormals, setUVs);
}
"
      },
    "Fabric.Compounds.PolygonMesh.Create.GetTorus" : {
      "objectType" : "Graph",
      "metadata" : {
        "uiNodeColor" : "{\n  \"r\" : 120,\n  \"g\" : 130,\n  \"b\" : 144\n  }",
        "uiHeaderColor" : "{\n  \"r\" : 88,\n  \"g\" : 92,\n  \"b\" : 110\n  }",
        "uiTooltip" : "Generates a polygon mesh torus.",
        "uiGraphPan" : "{\n  \"x\" : 44.0,\n  \"y\" : -40.0\n  }"
        },
      "title" : "GetTorus",
      "ports" : [
        {
          "objectType" : "Port",
          "metadata" : {
            "uiRange" : "(0, 5)"
            },
          "nodePortType" : "Out",
          "defaultValues" : {
            "Float32" : 0.5
            },
          "name" : "innerRadius",
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiRange" : "(0, 5)"
            },
          "nodePortType" : "Out",
          "defaultValues" : {
            "Float32" : 2
            },
          "name" : "outerRadius",
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiRange" : "(0, 32)"
            },
          "nodePortType" : "Out",
          "defaultValues" : {
            "UInt32" : 16
            },
          "name" : "detail",
          "execPortType" : "In",
          "typeSpec" : "Size"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "In",
          "name" : "mesh",
          "execPortType" : "Out",
          "typeSpec" : "PolygonMesh"
          }
        ],
      "extDeps" : {
        "Geometry" : "*"
        },
      "presetGUID" : "7F80E0AB27C6B066DCC96779963E625B",
      "origPresetGUID" : "7F80E0AB27C6B066DCC96779963E625B",
      "nodes" : [
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\": 312, \"y\": 129}"
            },
          "name" : "AddTorus",
          "ports" : [
            {
              "objectType" : "InstPort",
              "nodePortType" : "IO",
              "name" : "this"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "xfo"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "innerRadius"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "outerRadius"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "detail"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "setNormals"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "setUVs"
              }
            ],
          "executable" : "Fabric.Exts.Geometry.PolygonMesh.AddTorus",
          "presetGUID" : "5E67372A43161EBD29EA3CF445E0F891"
          },
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\":570.0,\"y\":146.0}"
            },
          "name" : "Cache",
          "ports" : [
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "value"
              }
            ],
          "executable" : "Fabric.Core.Data.Cache",
          "presetGUID" : "D903AFD981FE9214C69943F542D5FD60"
          },
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\": 122, \"y\": 76}"
            },
          "name" : "EmptyPolygonMesh",
          "ports" : [
            {
              "objectType" : "InstPort",
              "nodePortType" : "Out",
              "name" : "mesh"
              }
            ],
          "executable" : "Fabric.Exts.Geometry.PolygonMesh.EmptyPolygonMesh",
          "presetGUID" : "EE0894325519F66F17D265A042545FEB"
          }
        ],
      "connections" : {
        "innerRadius" : [
          "AddTorus.innerRadius"
          ],
        "outerRadius" : [
          "AddTorus.outerRadius"
          ],
        "detail" : [
          "AddTorus.detail"
          ],
        "AddTorus.this" : [
          "Cache.value"
          ],
        "Cache.value" : [
          "mesh"
          ],
        "EmptyPolygonMesh.mesh" : [
          "AddTorus.this"
          ]
        }
      },
    "Fabric.Exts.Geometry.PolygonMesh.AddTorus" : {
      "objectType" : "Func",
      "metadata" : {
        "uiDocUrl" : "http://docs.fabric-engine.com/FabricEngine/2.3.0/HTML/KLExtensionsGuide/Geometry/PolygonMesh.html",
        "uiTooltip" : "Appends a transformed torus to this mesh.\nBefore applying the transformation, it will be in the XZ plane, centered at the origin.\n\n\n\n Supported by PolygonMesh"
        },
      "title" : "AddTorus",
      "ports" : [
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 51,\n  \"g\" : 1,\n  \"b\" : 106\n  }"
            },
          "nodePortType" : "IO",
          "name" : "this",
          "execPortType" : "IO",
          "typeSpec" : "PolygonMesh"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 249,\n  \"g\" : 157,\n  \"b\" : 28\n  }"
            },
          "nodePortType" : "Out",
          "name" : "xfo",
          "execPortType" : "In",
          "typeSpec" : "Xfo"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiRange" : "(0.0, 8.0)"
            },
          "nodePortType" : "Out",
          "defaultValues" : {
            "Scalar" : 1
            },
          "name" : "innerRadius",
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiRange" : "(0.0, 12.0)"
            },
          "nodePortType" : "Out",
          "defaultValues" : {
            "Scalar" : 4
            },
          "name" : "outerRadius",
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiRange" : "(2, 12)"
            },
          "nodePortType" : "Out",
          "defaultValues" : {
            "Size" : 4
            },
          "name" : "detail",
          "execPortType" : "In",
          "typeSpec" : "Size"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "defaultValues" : {
            "Boolean" : true
            },
          "name" : "setNormals",
          "execPortType" : "In",
          "typeSpec" : "Boolean"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "defaultValues" : {
            "Boolean" : true
            },
          "name" : "setUVs",
          "execPortType" : "In",
          "typeSpec" : "Boolean"
          }
        ],
      "extDeps" : {
        "Geometry" : "*"
        },
      "presetGUID" : "5E67372A43161EBD29EA3CF445E0F891",
      "code" : "require Geometry;

dfgEntry {
  this.addTorus(xfo, innerRadius, outerRadius, detail, setNormals, setUVs);
}
"
      },
    "Fabric.Compounds.PolygonMesh.Create.GetSphere" : {
      "objectType" : "Graph",
      "metadata" : {
        "uiNodeColor" : "{\n  \"r\" : 120,\n  \"g\" : 130,\n  \"b\" : 144\n  }",
        "uiHeaderColor" : "{\n  \"r\" : 88,\n  \"g\" : 92,\n  \"b\" : 110\n  }",
        "uiTooltip" : "Generates a polygon mesh sphere.",
        "uiGraphPan" : "{\n  \"x\" : 65.0,\n  \"y\" : -161.0\n  }"
        },
      "title" : "GetSphere",
      "ports" : [
        {
          "objectType" : "Port",
          "metadata" : {
            "uiRange" : "(0, 5)"
            },
          "nodePortType" : "Out",
          "defaultValues" : {
            "Float32" : 1
            },
          "name" : "radius",
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiRange" : "(0, 32)"
            },
          "nodePortType" : "Out",
          "defaultValues" : {
            "UInt32" : 8
            },
          "name" : "detail",
          "execPortType" : "In",
          "typeSpec" : "Size"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "In",
          "name" : "mesh",
          "execPortType" : "Out",
          "typeSpec" : "PolygonMesh"
          }
        ],
      "extDeps" : {},
      "presetGUID" : "C056EAB708BB7EEAEA710BFFB8D4E9DE",
      "origPresetGUID" : "C056EAB708BB7EEAEA710BFFB8D4E9DE",
      "nodes" : [
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\": 813, \"y\": 247.5}"
            },
          "name" : "Cache",
          "ports" : [
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "value"
              }
            ],
          "executable" : "Fabric.Core.Data.Cache",
          "presetGUID" : "D903AFD981FE9214C69943F542D5FD60"
          },
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\":306.0,\"y\":190.5}"
            },
          "name" : "EmptyPolygonMesh",
          "ports" : [
            {
              "objectType" : "InstPort",
              "nodePortType" : "Out",
              "name" : "mesh"
              }
            ],
          "executable" : "Fabric.Exts.Geometry.PolygonMesh.EmptyPolygonMesh",
          "presetGUID" : "EE0894325519F66F17D265A042545FEB"
          },
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\":560.0,\"y\":224.0}"
            },
          "name" : "AddSphere",
          "ports" : [
            {
              "objectType" : "InstPort",
              "nodePortType" : "IO",
              "name" : "this"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "xfo"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "radius"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "loops"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "sides"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "setNormals"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "setUVs"
              }
            ],
          "executable" : "Fabric.Exts.Geometry.PolygonMesh.AddSphere",
          "presetGUID" : "5F0E4C14E6D77368B6D30C6BB76667B6"
          },
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\":358.0,\"y\":345.0}",
            "uiCollapsedState" : "2"
            },
          "name" : "Mul",
          "ports" : [
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "lhs"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "defaultValues" : {
                "UInt32" : 2
                },
              "name" : "rhs"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "Out",
              "name" : "result"
              }
            ],
          "executable" : "Fabric.Core.Math.Mul",
          "presetGUID" : "CC951B43BB879483B46EFF7965692350"
          }
        ],
      "connections" : {
        "radius" : [
          "AddSphere.radius"
          ],
        "detail" : [
          "Mul.lhs",
          "AddSphere.loops"
          ],
        "Cache.value" : [
          "mesh"
          ],
        "EmptyPolygonMesh.mesh" : [
          "AddSphere.this"
          ],
        "AddSphere.this" : [
          "Cache.value"
          ],
        "Mul.result" : [
          "AddSphere.sides"
          ]
        }
      },
    "Fabric.Exts.Geometry.PolygonMesh.AddSphere" : {
      "objectType" : "Func",
      "metadata" : {
        "uiDocUrl" : "http://docs.fabric-engine.com/FabricEngine/2.3.0/HTML/KLExtensionsGuide/Geometry/PolygonMesh.html",
        "uiTooltip" : "Appends a transformed sphere to this mesh.\nBefore applying the transformation, it will be centered at the origin.\n\n\nbuild the topology\nbuild the fan at the first pole.\nbuild the fan at the second pole.\nset positions and normals\nset uvs\nset the uvs on the the fan at the first pole.\n\n Supported by PolygonMesh"
        },
      "title" : "AddSphere",
      "ports" : [
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 51,\n  \"g\" : 1,\n  \"b\" : 106\n  }"
            },
          "nodePortType" : "IO",
          "name" : "this",
          "execPortType" : "IO",
          "typeSpec" : "PolygonMesh"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 249,\n  \"g\" : 157,\n  \"b\" : 28\n  }"
            },
          "nodePortType" : "Out",
          "name" : "xfo",
          "execPortType" : "In",
          "typeSpec" : "Xfo"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiRange" : "(0.0, 8.0)"
            },
          "nodePortType" : "Out",
          "defaultValues" : {
            "Scalar" : 4
            },
          "name" : "radius",
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiRange" : "(3, 24)"
            },
          "nodePortType" : "Out",
          "defaultValues" : {
            "UInt32" : 8
            },
          "name" : "loops",
          "execPortType" : "In",
          "typeSpec" : "UInt32"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiRange" : "(3, 24)"
            },
          "nodePortType" : "Out",
          "defaultValues" : {
            "UInt32" : 8
            },
          "name" : "sides",
          "execPortType" : "In",
          "typeSpec" : "UInt32"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "defaultValues" : {
            "Boolean" : true
            },
          "name" : "setNormals",
          "execPortType" : "In",
          "typeSpec" : "Boolean"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "defaultValues" : {
            "Boolean" : true
            },
          "name" : "setUVs",
          "execPortType" : "In",
          "typeSpec" : "Boolean"
          }
        ],
      "extDeps" : {
        "Geometry" : "*"
        },
      "presetGUID" : "5F0E4C14E6D77368B6D30C6BB76667B6",
      "code" : "require Geometry;

dfgEntry {
  this.addSphere(xfo, radius, loops, sides, setNormals, setUVs);
}
"
      },
    "Fabric.Core.Math.Mul" : {
      "objectType" : "Func",
      "title" : "Mul",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "lhs",
          "execPortType" : "In",
          "typeSpec" : "$TYPE$"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "rhs",
          "execPortType" : "In",
          "typeSpec" : "$TYPE$"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "In",
          "name" : "result",
          "execPortType" : "Out",
          "typeSpec" : "$TYPE$"
          }
        ],
      "extDeps" : {},
      "presetGUID" : "CC951B43BB879483B46EFF7965692350",
      "code" : "
dfgEntry {
	result = lhs * rhs;
}
"
      },
    "Fabric.Compounds.PolygonMesh.Modify.Transform" : {
      "objectType" : "Graph",
      "metadata" : {
        "uiNodeColor" : "{\n  \"r\" : 120,\n  \"g\" : 130,\n  \"b\" : 144\n  }",
        "uiHeaderColor" : "{\n  \"r\" : 88,\n  \"g\" : 92,\n  \"b\" : 110\n  }",
        "uiTooltip" : "transforms (= translates/rotates/scales) a polygon mesh."
        },
      "title" : "Transform",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "mesh",
          "execPortType" : "In",
          "typeSpec" : "PolygonMesh"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "xfo",
          "execPortType" : "In",
          "typeSpec" : "Xfo"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "In",
          "name" : "result",
          "execPortType" : "Out",
          "typeSpec" : "PolygonMesh"
          }
        ],
      "extDeps" : {
        "Geometry" : "*"
        },
      "presetGUID" : "4293D289E438FE24AF2B0BA7FF7CDCEA",
      "nodes" : [
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\": 725, \"y\": 131}"
            },
          "name" : "Cache",
          "ports" : [
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "value"
              }
            ],
          "executable" : "Fabric.Core.Data.Cache",
          "presetGUID" : "D903AFD981FE9214C69943F542D5FD60"
          },
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\": 452.5, \"y\": 130.5}"
            },
          "name" : "applyTransform",
          "ports" : [
            {
              "objectType" : "InstPort",
              "nodePortType" : "IO",
              "name" : "mesh"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "xfo"
              }
            ],
          "definition" : {
            "objectType" : "Func",
            "title" : "applyTransform",
            "ports" : [
              {
                "objectType" : "Port",
                "nodePortType" : "IO",
                "name" : "mesh",
                "execPortType" : "IO",
                "typeSpec" : "PolygonMesh"
                },
              {
                "objectType" : "Port",
                "nodePortType" : "Out",
                "name" : "xfo",
                "execPortType" : "In",
                "typeSpec" : "Xfo"
                }
              ],
            "extDeps" : {},
            "code" : "require Geometry;

dfgEntry
{
  mesh.applyTransform(xfo);
}

"
            }
          },
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\": 251, \"y\": 39}"
            },
          "name" : "ClonePolygonMesh",
          "ports" : [
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "value"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "Out",
              "name" : "result"
              }
            ],
          "executable" : "Fabric.Exts.Geometry.PolygonMesh.ClonePolygonMesh",
          "presetGUID" : "8480EBBD95E54A412E1471D01B474BA2"
          }
        ],
      "connections" : {
        "mesh" : [
          "ClonePolygonMesh.value"
          ],
        "xfo" : [
          "applyTransform.xfo"
          ],
        "Cache.value" : [
          "result"
          ],
        "applyTransform.mesh" : [
          "Cache.value"
          ],
        "ClonePolygonMesh.result" : [
          "applyTransform.mesh"
          ]
        }
      },
    "Fabric.Exts.Geometry.PolygonMesh.ClonePolygonMesh" : {
      "objectType" : "Graph",
      "metadata" : {
        "uiNodeColor" : "{\n  \"r\" : 214,\n  \"g\" : 191,\n  \"b\" : 103\n  }",
        "uiHeaderColor" : "{\n  \"r\" : 188,\n  \"g\" : 129,\n  \"b\" : 83\n  }"
        },
      "title" : "ClonePolygonMesh",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "value",
          "execPortType" : "In"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "In",
          "name" : "result",
          "execPortType" : "Out",
          "typeSpec" : "PolygonMesh"
          }
        ],
      "extDeps" : {},
      "presetGUID" : "8480EBBD95E54A412E1471D01B474BA2",
      "nodes" : [
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\": 329, \"y\": 165}"
            },
          "name" : "PolygonMesh",
          "ports" : [
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "debugName"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "float64Positions"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "Out",
              "name" : "result"
              }
            ],
          "executable" : "Fabric.Exts.Geometry.PolygonMesh.PolygonMesh",
          "presetGUID" : "18F3A38BE7497D6BFC18A148A520B66D"
          },
        {
          "objectType" : "Var",
          "metadata" : {
            "uiGraphPos" : "{\"x\": 476, \"y\": 176}"
            },
          "name" : "mesh",
          "ports" : [
            {
              "objectType" : "VarPort",
              "nodePortType" : "IO",
              "name" : "value"
              }
            ],
          "dataType" : "PolygonMesh",
          "extDep" : "Geometry:*"
          },
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\": 674, \"y\": 115}"
            },
          "name" : "CloneMembersTo",
          "ports" : [
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "value"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "IO",
              "name" : "clonedValue"
              }
            ],
          "executable" : "Fabric.Core.Data.CloneMembersTo",
          "presetGUID" : "5FCEF4F5EFB2D8F917E415A22FFCDF2C"
          }
        ],
      "connections" : {
        "value" : [
          "CloneMembersTo.value"
          ],
        "PolygonMesh.result" : [
          "mesh.value"
          ],
        "mesh.value" : [
          "CloneMembersTo.clonedValue"
          ],
        "CloneMembersTo.clonedValue" : [
          "result"
          ]
        }
      },
    "Fabric.Core.Data.CloneMembersTo" : {
      "objectType" : "Func",
      "metadata" : {
        "uiNodeColor" : "{\n  \"r\" : 214,\n  \"g\" : 191,\n  \"b\" : 103\n  }",
        "uiHeaderColor" : "{\n  \"r\" : 188,\n  \"g\" : 129,\n  \"b\" : 83\n  }"
        },
      "title" : "CloneMembersTo",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "value",
          "execPortType" : "In",
          "typeSpec" : "$TYPE$"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "IO",
          "name" : "clonedValue",
          "execPortType" : "IO",
          "typeSpec" : "$TYPE$"
          }
        ],
      "extDeps" : {},
      "presetGUID" : "5FCEF4F5EFB2D8F917E415A22FFCDF2C",
      "code" : "dfgEntry {
  value.cloneMembersTo(clonedValue);
}
"
      },
    "Fabric.Core.Constants.Scalar" : {
      "objectType" : "Func",
      "metadata" : {
        "uiAlwaysShowDaisyChainPorts" : "true"
        },
      "title" : "Scalar",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "value",
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          }
        ],
      "extDeps" : {},
      "presetGUID" : "E0E96C6E234F70063BC98887B83327DC",
      "code" : "dfgEntry {
}
"
      },
    "Fabric.Exts.Math.Xfo.XfoFromScalars" : {
      "objectType" : "Func",
      "metadata" : {
        "uiNodeColor" : "{\n  \"r\" : 99,\n  \"g\" : 129,\n  \"b\" : 92\n  }",
        "uiDocUrl" : "http://docs.fabric-engine.com/FabricEngine/2.3.0/HTML/KLExtensionsGuide/Math/Xfo.html",
        "uiTooltip" : "Setter from single channels, the rotation being in degrees\n\n Supported by Xfo"
        },
      "title" : "XfoFromScalars",
      "ports" : [
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 249,\n  \"g\" : 157,\n  \"b\" : 28\n  }"
            },
          "nodePortType" : "IO",
          "name" : "this",
          "execPortType" : "IO",
          "typeSpec" : "Xfo"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "defaultValues" : {
            "Scalar" : 1
            },
          "name" : "scX",
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "defaultValues" : {
            "Scalar" : 1
            },
          "name" : "scY",
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "defaultValues" : {
            "Scalar" : 1
            },
          "name" : "scZ",
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiRange" : "(-180, 180)"
            },
          "nodePortType" : "Out",
          "name" : "degreeX",
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiRange" : "(-180, 180)"
            },
          "nodePortType" : "Out",
          "name" : "degreeY",
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiRange" : "(-180, 180)"
            },
          "nodePortType" : "Out",
          "name" : "degreeZ",
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiRange" : "(-5.0, 5.0)"
            },
          "nodePortType" : "Out",
          "name" : "trX",
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiRange" : "(-5.0, 5.0)"
            },
          "nodePortType" : "Out",
          "name" : "trY",
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiRange" : "(-5.0, 5.0)"
            },
          "nodePortType" : "Out",
          "name" : "trZ",
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          }
        ],
      "extDeps" : {
        "Math" : "*"
        },
      "presetGUID" : "C9E3024CB08CA5CF0F3E6CD6B755F608",
      "code" : "require Math;

dfgEntry {
  this.XfoFromScalars(scX, scY, scZ, degreeX, degreeY, degreeZ, trX, trY, trZ);
}
"
      },
    "Fabric.Core.Math.Sub" : {
      "objectType" : "Func",
      "title" : "Sub",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "lhs",
          "execPortType" : "In",
          "typeSpec" : "$TYPE$"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "rhs",
          "execPortType" : "In",
          "typeSpec" : "$TYPE$"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "In",
          "name" : "result",
          "execPortType" : "Out",
          "typeSpec" : "$TYPE$"
          }
        ],
      "extDeps" : {},
      "presetGUID" : "F9754B19F43BC017056B8BA291E7B8B4",
      "code" : "
dfgEntry {
	result = lhs - rhs;
}
"
      },
    "Fabric.Core.Math.Rescale" : {
      "objectType" : "Func",
      "title" : "Rescale",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "value",
          "execPortType" : "In",
          "typeSpec" : "$TYPE$"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "inMin",
          "execPortType" : "In",
          "typeSpec" : "$TYPE$"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "inMax",
          "execPortType" : "In",
          "typeSpec" : "$TYPE$"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "outMin",
          "execPortType" : "In",
          "typeSpec" : "$TYPE$"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "outMax",
          "execPortType" : "In",
          "typeSpec" : "$TYPE$"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "In",
          "name" : "result",
          "execPortType" : "Out",
          "typeSpec" : "$TYPE$"
          }
        ],
      "extDeps" : {},
      "presetGUID" : "4769F739D0AB963E327F9F6DB41FB521",
      "code" : "
dfgEntry {
	result = outMin + (outMax - outMin) * (value - inMin) / (inMax - inMin);
}
"
      },
    "Fabric.Core.Trigonometry.Sin" : {
      "objectType" : "Func",
      "title" : "Sin",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "value",
          "execPortType" : "In",
          "typeSpec" : "$TYPE$"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "In",
          "name" : "result",
          "execPortType" : "Out",
          "typeSpec" : "$TYPE$"
          }
        ],
      "extDeps" : {},
      "presetGUID" : "770343876572443C9B4721A66A428C2D",
      "code" : "
dfgEntry {
	result = sin(value);
}
"
      },
    "Fabric.Compounds.Deform.ConstrainToSurfaceXfo" : {
      "objectType" : "Graph",
      "metadata" : {
        "uiTextColor" : "{\n  \"r\" : 20,\n  \"g\" : 20,\n  \"b\" : 20\n  }",
        "uiNodeColor" : "{\n  \"r\" : 121,\n  \"g\" : 134,\n  \"b\" : 143\n  }",
        "uiTooltip" : "Constrains the positions of an array of transformations to the surface of a polygon mesh.\nAdditionally the orientation is aligned to the surface normals."
        },
      "title" : "ConstrainToSurfaceXfo",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "mesh",
          "execPortType" : "In",
          "typeSpec" : "PolygonMesh"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "xfos",
          "execPortType" : "In",
          "typeSpec" : "Xfo[]"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiRange" : "(0, 1)"
            },
          "nodePortType" : "Out",
          "defaultValues" : {
            "Float32" : 1
            },
          "name" : "constrain",
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiRange" : "(0, 1)"
            },
          "nodePortType" : "Out",
          "defaultValues" : {
            "Float32" : 1
            },
          "name" : "align",
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiCombo" : "(\"use vector\", \"point at position\", \"use surface components\")"
            },
          "nodePortType" : "Out",
          "defaultValues" : {
            "SInt32" : 0
            },
          "name" : "upVector",
          "execPortType" : "In",
          "typeSpec" : "Integer"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "defaultValues" : {
            "Vec3" : {
              "x" : 1.100000023841858,
              "y" : 2.200000047683716,
              "z" : 3.299999952316284
              }
            },
          "name" : "vector",
          "execPortType" : "In",
          "typeSpec" : "Vec3"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "position",
          "execPortType" : "In",
          "typeSpec" : "Vec3"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "In",
          "name" : "result",
          "execPortType" : "Out",
          "typeSpec" : "Xfo[]"
          }
        ],
      "extDeps" : {},
      "presetGUID" : "12EEC0419B29E32B7FCF69C383F159FE",
      "nodes" : [
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\":242.0,\"y\":215.0}",
            "uiNodeColor" : "{\n  \"r\" : 121,\n  \"g\" : 134,\n  \"b\" : 143\n  }",
            "uiTextColor" : "{\n  \"r\" : 20,\n  \"g\" : 20,\n  \"b\" : 20\n  }"
            },
          "name" : "applyConstrainToSurfaceXfo",
          "ports" : [
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "mesh"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "xfos"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "constrain"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "align"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "upVecMode"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "upVecVec"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "upVecPos"
              },
            {
              "objectType" : "InstPort",
              "nodePortType" : "Out",
              "name" : "result"
              }
            ],
          "definition" : {
            "objectType" : "Func",
            "title" : "applyConstrainToSurfaceXfo",
            "ports" : [
              {
                "objectType" : "Port",
                "nodePortType" : "Out",
                "name" : "mesh",
                "execPortType" : "In",
                "typeSpec" : "PolygonMesh"
                },
              {
                "objectType" : "Port",
                "nodePortType" : "Out",
                "name" : "xfos",
                "execPortType" : "In",
                "typeSpec" : "Xfo[]"
                },
              {
                "objectType" : "Port",
                "nodePortType" : "Out",
                "name" : "constrain",
                "execPortType" : "In",
                "typeSpec" : "Scalar"
                },
              {
                "objectType" : "Port",
                "nodePortType" : "Out",
                "name" : "align",
                "execPortType" : "In",
                "typeSpec" : "Scalar"
                },
              {
                "objectType" : "Port",
                "nodePortType" : "Out",
                "name" : "upVecMode",
                "execPortType" : "In",
                "typeSpec" : "Integer"
                },
              {
                "objectType" : "Port",
                "nodePortType" : "Out",
                "name" : "upVecVec",
                "execPortType" : "In",
                "typeSpec" : "Vec3"
                },
              {
                "objectType" : "Port",
                "nodePortType" : "Out",
                "name" : "upVecPos",
                "execPortType" : "In",
                "typeSpec" : "Vec3"
                },
              {
                "objectType" : "Port",
                "nodePortType" : "In",
                "name" : "result",
                "execPortType" : "Out",
                "typeSpec" : "Xfo[]"
                }
              ],
            "extDeps" : {
              "Geometry" : "*"
              },
            "code" : "operator applyConstrainToSurfaceXfo_task<<<index>>>(PolygonMesh  polymesh, Scalar constrain, Scalar align, Integer upVecMode, Vec3 upVec, io Xfo res[])
{
  // begin spatial query.
  Ref<SpatialQuery> query = polymesh.beginSpatialQuery();

  // get closest location and calculate result.
  GeometryLocation gloc = query.getClosest(res[index].tr, Vec3(1, 1, 1), SCALAR_INFINITE);
  if (gloc.isValid())
  {
    // ConstrainOnSurface.
    if (constrain != 0)
    {
      if (constrain == 1) res[index].tr = polymesh.getPositionAtLocation(gloc);
      else                res[index].tr = res[index].tr + constrain * (polymesh.getPositionAtLocation(gloc) - res[index].tr);
    }
    
    // AlignToSurface.
    if (align != 0)
    {
      // get the triangle's vertex indices.
      UInt32 subTriangleVertIdx[3] = polymesh.getPolygonSubTrianglePolygonPoints(gloc.index, gloc.subIndex);
  
      // calculate direction vector.
      Vec3 direction(0);
      direction += gloc.barycentric.x * polymesh.getPolygonPointNormal(gloc.index, subTriangleVertIdx[0]);
      direction += gloc.barycentric.y * polymesh.getPolygonPointNormal(gloc.index, subTriangleVertIdx[1]);
      direction += gloc.barycentric.z * polymesh.getPolygonPointNormal(gloc.index, subTriangleVertIdx[2]);
    
      // calculate up vector.
      Vec3 upvector;
      if      (upVecMode == 0)  upvector = upVec;
      else if (upVecMode == 1)  upvector = upVec - res[index].tr;
      else                      upvector = polymesh.getPointPosition(subTriangleVertIdx[1]) - polymesh.getPointPosition(subTriangleVertIdx[0]);
  
      // calculate final orientation.
      if (align == 1)
      {
        res[index].ori.setFromDirectionAndUpvector(direction, upvector);
      }
      else
      {
        Quat q;
        q.setFromDirectionAndUpvector(direction, upvector);
        res[index].ori = res[index].ori.linearInterpolate(q, align);
      }
    }
  }

  // end spatial query.
  polymesh.endSpatialQuery(query);
}

dfgEntry
{
  // resize and init output.
  result.resize(xfos.size());
  for (UInt32 i=0;i<result.size();i++)
    result[i] = xfos[i];
  
  // do it.
  if (constrain != 0 || align != 0)
  {
    // prepare mesh for spatial queries.
    GenericValueContainer options = GenericValueContainer();
    PrepareForSpatialQueries_setOctree(options);
    mesh.prepareForSpatialQueries(result.size(), options);

    // push/align.
    Vec3 upVec;
    if      (upVecMode == 0)  upVec = upVecVec;
    else if (upVecMode == 1)  upVec = upVecPos;
    applyConstrainToSurfaceXfo_task<<<result.size()>>>(mesh, constrain, align, upVecMode, upVec, result);
  }
}


"
            }
          },
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\":536.0,\"y\":369.0}"
            },
          "name" : "Cache_1",
          "ports" : [
            {
              "objectType" : "InstPort",
              "nodePortType" : "In",
              "name" : "value"
              }
            ],
          "executable" : "Fabric.Core.Data.Cache",
          "presetGUID" : "D903AFD981FE9214C69943F542D5FD60"
          }
        ],
      "connections" : {
        "mesh" : [
          "applyConstrainToSurfaceXfo.mesh"
          ],
        "xfos" : [
          "applyConstrainToSurfaceXfo.xfos"
          ],
        "constrain" : [
          "applyConstrainToSurfaceXfo.constrain"
          ],
        "align" : [
          "applyConstrainToSurfaceXfo.align"
          ],
        "upVector" : [
          "applyConstrainToSurfaceXfo.upVecMode"
          ],
        "vector" : [
          "applyConstrainToSurfaceXfo.upVecVec"
          ],
        "position" : [
          "applyConstrainToSurfaceXfo.upVecPos"
          ],
        "applyConstrainToSurfaceXfo.result" : [
          "Cache_1.value"
          ],
        "Cache_1.value" : [
          "result"
          ]
        }
      }
    },
  "args" : [
    {
      "type" : "DrawingHandle",
      "value" : null,
      "ext" : "InlineDrawing"
      },
    {
      "type" : "Float32",
      "value" : null
      }
    ]
  }